/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp EQUAL                &kp N1  &kp N2    &kp N3     &kp N4               &kp N5          &kp N6       &kp N7           &kp N8        &kp N9   &kp N0    &kp MINUS
&kp LWIN  &kp GRAVE                &kp Q   &kp W     &kp E      &kp R                &kp T           &kp Y        &kp U            &kp I         &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
          &mt LEFT_CONTROL ESCAPE  &kp A   &kp S     &kp D      &kp F                &kp G           &kp H        &kp J            &kp K         &kp L    &kp SEMI  &mt RCTRL SQT
          &kp LALT                 &kp Z   &kp X     &kp C      &kp V                &kp B           &kp N        &kp M            &kp COMMA     &kp DOT  &kp FSLH  &mt RALT BSLH
                                           &kp LGUI  &lt 1 TAB  &mt LSHFT BACKSPACE  &lt 2 ESCAPE    &lt 2 ENTER  &mt RSHFT SPACE  &lt 1 DELETE  &kp F13
            >;
        };

        lower_layer {
            bindings = <
        &trans          &trans    &trans  &trans     &trans    &trans       &trans     &trans    &trans     &trans    &trans    &trans
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3     &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
                                  &trans  &lt 3 TAB  &trans    &trans       &trans     &trans    &lt 3 DEL  &trans
            >;
        };

        raise_layer {
            bindings = <
        &trans  &trans             &trans          &trans          &trans          &trans          &trans               &trans       &trans         &trans            &trans           &trans
&trans  &none   &none              &none           &none           &none           &none           &none                &kp PAGE_UP  &kp PAGE_DOWN  &kp HOME          &kp END          &kp PRINTSCREEN  &trans
        &trans  &kp K_APPLICATION  &kp LS(DELETE)  &kp LC(INSERT)  &kp LS(INSERT)  &kp KP_PLUS     &kp LEFT             &kp DOWN     &kp UP         &kp RIGHT         &none            &mt RCTRL K_APP
        &trans  &none              &none           &none           &none           &none           &kp LS(PAUSE_BREAK)  &none        &none          &kp LC(LS(HOME))  &kp LS(LC(END))  &trans
                                   &trans          &trans          &trans          &lt 3 ESCAPE    &lt 3 ENTER          &trans       &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
